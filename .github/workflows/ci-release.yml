name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  create_semantic_release:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_TAG: ${{ steps.get_latest_tag.outputs.RELEASE_TAG }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.8.1'

      - name: Semantic Release
        id: semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npx semantic-release

          
      - name: Get latest git tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          commit_hash=$(git show-ref --tags -s "$latest_tag")
          echo "RELEASE_TAG=$latest_tag" >> $GITHUB_OUTPUT

      - name: Show Latest Release version and hash
        run: |
          echo "The latest release tag is: ${{ steps.get_latest_tag.outputs.RELEASE_TAG }}"
        
      
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install Bun
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH

      # Install dependencies
      - name: Install Dependencies
        run: bun install

   

      # Pull Vercel Environment Information
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # Build the project
      - name: Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Deploy the project with version environment variable
      - name: Deploy Project
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
