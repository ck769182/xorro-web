name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install Bun
      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo "$HOME/.bun/bin" >> $GITHUB_PATH

      # Install dependencies
      - name: Install Dependencies
        run: bun install

      # Install Semantic Release
      - name: Install Semantic Release
        run: |
          bun add --dev semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/npm

      # Run Semantic Release
      - name: Run Semantic Release
        id: semantic-release
        run: |
          npx semantic-release --branches main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Push Tags to Remote
        run: |
          git fetch --tags
          git tag -a $(npx semantic-release --dry-run | grep -oP '(?<=Published release: )\S+') -m "Release $(npx semantic-release --dry-run | grep -oP '(?<=Published release: )\S+')"
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

   

      # Pull Vercel Environment Information
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      # Build the project
      - name: Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      # Deploy the project with version environment variable
      - name: Deploy Project
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
